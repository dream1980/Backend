/**
 * Fortanix SDKMS REST API
 * This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 
 *
 * OpenAPI spec version: 1.0.0-20181004
 * Contact: support@fortanix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ADDecryptInput', 'model/ADEncryptInput', 'model/Account', 'model/AccountRequest', 'model/AccountState', 'model/AgreeKeyMechanism', 'model/AgreeKeyRequest', 'model/App', 'model/AppAuthType', 'model/AppCredential', 'model/AppCredentialResponse', 'model/AppRequest', 'model/ApprovableResult', 'model/ApprovalRequest', 'model/ApprovalRequestRequest', 'model/ApprovalStatus', 'model/ApprovalSubject', 'model/AuditLogResponse', 'model/AuthConfig', 'model/AuthConfigPassword', 'model/AuthResponse', 'model/AuthType', 'model/BatchDecryptRequest', 'model/BatchDecryptRequestInner', 'model/BatchDecryptResponse', 'model/BatchDecryptResponseInner', 'model/BatchEncryptRequest', 'model/BatchEncryptRequestInner', 'model/BatchEncryptResponse', 'model/BatchEncryptResponseInner', 'model/BatchSignRequest', 'model/BatchSignResponse', 'model/BatchSignResponseInner', 'model/BatchVerifyRequest', 'model/BatchVerifyResponse', 'model/BatchVerifyResponseInner', 'model/CaConfig', 'model/CipherMode', 'model/ConfirmEmailRequest', 'model/ConfirmEmailResponse', 'model/CreatorType', 'model/CryptMode', 'model/DecryptFinalRequest', 'model/DecryptFinalRequestEx', 'model/DecryptFinalResponse', 'model/DecryptInitRequest', 'model/DecryptInitRequestEx', 'model/DecryptInitResponse', 'model/DecryptRequest', 'model/DecryptRequestEx', 'model/DecryptResponse', 'model/DecryptUpdateRequest', 'model/DecryptUpdateRequestEx', 'model/DecryptUpdateResponse', 'model/DeriveKeyMechanism', 'model/DeriveKeyRequest', 'model/DeriveKeyRequestEx', 'model/DigestAlgorithm', 'model/DigestRequest', 'model/DigestResponse', 'model/EllipticCurve', 'model/EncryptFinalRequest', 'model/EncryptFinalRequestEx', 'model/EncryptFinalResponse', 'model/EncryptInitRequest', 'model/EncryptInitRequestEx', 'model/EncryptInitResponse', 'model/EncryptRequest', 'model/EncryptRequestEx', 'model/EncryptResponse', 'model/EncryptUpdateRequest', 'model/EncryptUpdateRequestEx', 'model/EncryptUpdateResponse', 'model/Entity', 'model/Error', 'model/ForgotPasswordRequest', 'model/GoogleServiceAccountKey', 'model/Group', 'model/GroupRequest', 'model/IVDecryptInput', 'model/IVEncryptInput', 'model/IVEncryptOutput', 'model/KeyObject', 'model/KeyOperations', 'model/Language', 'model/LoggingConfig', 'model/LoggingConfigRequest', 'model/MacGenerateRequest', 'model/MacGenerateRequestEx', 'model/MacGenerateResponse', 'model/MacVerifyRequest', 'model/MacVerifyRequestEx', 'model/MacVerifyResponse', 'model/MfaChallenge', 'model/Mgf', 'model/MgfMgf1', 'model/NotificationPref', 'model/ObjectDigestRequest', 'model/ObjectOrigin', 'model/ObjectType', 'model/PasswordChangeRequest', 'model/PasswordResetRequest', 'model/PersistTransientKeyRequest', 'model/Plugin', 'model/PluginInvokeRequest', 'model/PluginInvokeResponse', 'model/PluginRequest', 'model/PluginSource', 'model/PluginType', 'model/ProcessInviteRequest', 'model/RecoveryCodes', 'model/RsaEncryptionPadding', 'model/RsaEncryptionPaddingOAEP', 'model/RsaEncryptionPolicy', 'model/RsaEncryptionPolicyPadding', 'model/RsaEncryptionPolicyPaddingOAEP', 'model/RsaEncryptionPolicyPaddingOAEPMgf1', 'model/RsaOptions', 'model/RsaSignaturePadding', 'model/RsaSignaturePaddingPSS', 'model/RsaSignaturePolicy', 'model/RsaSignaturePolicyPadding', 'model/SelectAccountRequest', 'model/SelectAccountResponse', 'model/ServerMode', 'model/SignRequest', 'model/SignRequestEx', 'model/SignResponse', 'model/SignatureMode', 'model/SignupRequest', 'model/SobjectDescriptor', 'model/SobjectRequest', 'model/SplunkLoggingConfig', 'model/SplunkLoggingConfigRequest', 'model/StackdriverLoggingConfig', 'model/StackdriverLoggingConfigRequest', 'model/SubscriptionChangeRequest', 'model/SubscriptionType', 'model/TagDecryptInput', 'model/TagEncryptOutput', 'model/TagLenEncryptInput', 'model/TlsConfig', 'model/TlsMode', 'model/U2fAddDeviceRequest', 'model/U2fDelDeviceRequest', 'model/U2fDevice', 'model/U2fKey', 'model/U2fRenameDeviceRequest', 'model/UnwrapKeyRequest', 'model/UnwrapKeyRequestEx', 'model/User', 'model/UserAccountFlags', 'model/UserAccountMap', 'model/UserGroup', 'model/UserGroupFlags', 'model/UserRequest', 'model/UserState', 'model/Uuid', 'model/ValidateTokenRequest', 'model/ValidateTokenResponse', 'model/VerifyRequest', 'model/VerifyRequestEx', 'model/VerifyResponse', 'model/VersionResponse', 'model/WrapKeyRequest', 'model/WrapKeyRequestEx', 'model/WrapKeyResponse', 'api/AccountsApi', 'api/ApprovalRequestsApi', 'api/AppsApi', 'api/AuthenticationApi', 'api/DigestApi', 'api/EncryptionAndDecryptionApi', 'api/GroupsApi', 'api/LogsApi', 'api/PluginsApi', 'api/SecurityObjectsApi', 'api/SignAndVerifyApi', 'api/TwoFactorAuthenticationApi', 'api/UsersApi', 'api/WrappingAndUnwrappingApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ADDecryptInput'), require('./model/ADEncryptInput'), require('./model/Account'), require('./model/AccountRequest'), require('./model/AccountState'), require('./model/AgreeKeyMechanism'), require('./model/AgreeKeyRequest'), require('./model/App'), require('./model/AppAuthType'), require('./model/AppCredential'), require('./model/AppCredentialResponse'), require('./model/AppRequest'), require('./model/ApprovableResult'), require('./model/ApprovalRequest'), require('./model/ApprovalRequestRequest'), require('./model/ApprovalStatus'), require('./model/ApprovalSubject'), require('./model/AuditLogResponse'), require('./model/AuthConfig'), require('./model/AuthConfigPassword'), require('./model/AuthResponse'), require('./model/AuthType'), require('./model/BatchDecryptRequest'), require('./model/BatchDecryptRequestInner'), require('./model/BatchDecryptResponse'), require('./model/BatchDecryptResponseInner'), require('./model/BatchEncryptRequest'), require('./model/BatchEncryptRequestInner'), require('./model/BatchEncryptResponse'), require('./model/BatchEncryptResponseInner'), require('./model/BatchSignRequest'), require('./model/BatchSignResponse'), require('./model/BatchSignResponseInner'), require('./model/BatchVerifyRequest'), require('./model/BatchVerifyResponse'), require('./model/BatchVerifyResponseInner'), require('./model/CaConfig'), require('./model/CipherMode'), require('./model/ConfirmEmailRequest'), require('./model/ConfirmEmailResponse'), require('./model/CreatorType'), require('./model/CryptMode'), require('./model/DecryptFinalRequest'), require('./model/DecryptFinalRequestEx'), require('./model/DecryptFinalResponse'), require('./model/DecryptInitRequest'), require('./model/DecryptInitRequestEx'), require('./model/DecryptInitResponse'), require('./model/DecryptRequest'), require('./model/DecryptRequestEx'), require('./model/DecryptResponse'), require('./model/DecryptUpdateRequest'), require('./model/DecryptUpdateRequestEx'), require('./model/DecryptUpdateResponse'), require('./model/DeriveKeyMechanism'), require('./model/DeriveKeyRequest'), require('./model/DeriveKeyRequestEx'), require('./model/DigestAlgorithm'), require('./model/DigestRequest'), require('./model/DigestResponse'), require('./model/EllipticCurve'), require('./model/EncryptFinalRequest'), require('./model/EncryptFinalRequestEx'), require('./model/EncryptFinalResponse'), require('./model/EncryptInitRequest'), require('./model/EncryptInitRequestEx'), require('./model/EncryptInitResponse'), require('./model/EncryptRequest'), require('./model/EncryptRequestEx'), require('./model/EncryptResponse'), require('./model/EncryptUpdateRequest'), require('./model/EncryptUpdateRequestEx'), require('./model/EncryptUpdateResponse'), require('./model/Entity'), require('./model/Error'), require('./model/ForgotPasswordRequest'), require('./model/GoogleServiceAccountKey'), require('./model/Group'), require('./model/GroupRequest'), require('./model/IVDecryptInput'), require('./model/IVEncryptInput'), require('./model/IVEncryptOutput'), require('./model/KeyObject'), require('./model/KeyOperations'), require('./model/Language'), require('./model/LoggingConfig'), require('./model/LoggingConfigRequest'), require('./model/MacGenerateRequest'), require('./model/MacGenerateRequestEx'), require('./model/MacGenerateResponse'), require('./model/MacVerifyRequest'), require('./model/MacVerifyRequestEx'), require('./model/MacVerifyResponse'), require('./model/MfaChallenge'), require('./model/Mgf'), require('./model/MgfMgf1'), require('./model/NotificationPref'), require('./model/ObjectDigestRequest'), require('./model/ObjectOrigin'), require('./model/ObjectType'), require('./model/PasswordChangeRequest'), require('./model/PasswordResetRequest'), require('./model/PersistTransientKeyRequest'), require('./model/Plugin'), require('./model/PluginInvokeRequest'), require('./model/PluginInvokeResponse'), require('./model/PluginRequest'), require('./model/PluginSource'), require('./model/PluginType'), require('./model/ProcessInviteRequest'), require('./model/RecoveryCodes'), require('./model/RsaEncryptionPadding'), require('./model/RsaEncryptionPaddingOAEP'), require('./model/RsaEncryptionPolicy'), require('./model/RsaEncryptionPolicyPadding'), require('./model/RsaEncryptionPolicyPaddingOAEP'), require('./model/RsaEncryptionPolicyPaddingOAEPMgf1'), require('./model/RsaOptions'), require('./model/RsaSignaturePadding'), require('./model/RsaSignaturePaddingPSS'), require('./model/RsaSignaturePolicy'), require('./model/RsaSignaturePolicyPadding'), require('./model/SelectAccountRequest'), require('./model/SelectAccountResponse'), require('./model/ServerMode'), require('./model/SignRequest'), require('./model/SignRequestEx'), require('./model/SignResponse'), require('./model/SignatureMode'), require('./model/SignupRequest'), require('./model/SobjectDescriptor'), require('./model/SobjectRequest'), require('./model/SplunkLoggingConfig'), require('./model/SplunkLoggingConfigRequest'), require('./model/StackdriverLoggingConfig'), require('./model/StackdriverLoggingConfigRequest'), require('./model/SubscriptionChangeRequest'), require('./model/SubscriptionType'), require('./model/TagDecryptInput'), require('./model/TagEncryptOutput'), require('./model/TagLenEncryptInput'), require('./model/TlsConfig'), require('./model/TlsMode'), require('./model/U2fAddDeviceRequest'), require('./model/U2fDelDeviceRequest'), require('./model/U2fDevice'), require('./model/U2fKey'), require('./model/U2fRenameDeviceRequest'), require('./model/UnwrapKeyRequest'), require('./model/UnwrapKeyRequestEx'), require('./model/User'), require('./model/UserAccountFlags'), require('./model/UserAccountMap'), require('./model/UserGroup'), require('./model/UserGroupFlags'), require('./model/UserRequest'), require('./model/UserState'), require('./model/Uuid'), require('./model/ValidateTokenRequest'), require('./model/ValidateTokenResponse'), require('./model/VerifyRequest'), require('./model/VerifyRequestEx'), require('./model/VerifyResponse'), require('./model/VersionResponse'), require('./model/WrapKeyRequest'), require('./model/WrapKeyRequestEx'), require('./model/WrapKeyResponse'), require('./api/AccountsApi'), require('./api/ApprovalRequestsApi'), require('./api/AppsApi'), require('./api/AuthenticationApi'), require('./api/DigestApi'), require('./api/EncryptionAndDecryptionApi'), require('./api/GroupsApi'), require('./api/LogsApi'), require('./api/PluginsApi'), require('./api/SecurityObjectsApi'), require('./api/SignAndVerifyApi'), require('./api/TwoFactorAuthenticationApi'), require('./api/UsersApi'), require('./api/WrappingAndUnwrappingApi'));
  }
}(function(ApiClient, ADDecryptInput, ADEncryptInput, Account, AccountRequest, AccountState, AgreeKeyMechanism, AgreeKeyRequest, App, AppAuthType, AppCredential, AppCredentialResponse, AppRequest, ApprovableResult, ApprovalRequest, ApprovalRequestRequest, ApprovalStatus, ApprovalSubject, AuditLogResponse, AuthConfig, AuthConfigPassword, AuthResponse, AuthType, BatchDecryptRequest, BatchDecryptRequestInner, BatchDecryptResponse, BatchDecryptResponseInner, BatchEncryptRequest, BatchEncryptRequestInner, BatchEncryptResponse, BatchEncryptResponseInner, BatchSignRequest, BatchSignResponse, BatchSignResponseInner, BatchVerifyRequest, BatchVerifyResponse, BatchVerifyResponseInner, CaConfig, CipherMode, ConfirmEmailRequest, ConfirmEmailResponse, CreatorType, CryptMode, DecryptFinalRequest, DecryptFinalRequestEx, DecryptFinalResponse, DecryptInitRequest, DecryptInitRequestEx, DecryptInitResponse, DecryptRequest, DecryptRequestEx, DecryptResponse, DecryptUpdateRequest, DecryptUpdateRequestEx, DecryptUpdateResponse, DeriveKeyMechanism, DeriveKeyRequest, DeriveKeyRequestEx, DigestAlgorithm, DigestRequest, DigestResponse, EllipticCurve, EncryptFinalRequest, EncryptFinalRequestEx, EncryptFinalResponse, EncryptInitRequest, EncryptInitRequestEx, EncryptInitResponse, EncryptRequest, EncryptRequestEx, EncryptResponse, EncryptUpdateRequest, EncryptUpdateRequestEx, EncryptUpdateResponse, Entity, Error, ForgotPasswordRequest, GoogleServiceAccountKey, Group, GroupRequest, IVDecryptInput, IVEncryptInput, IVEncryptOutput, KeyObject, KeyOperations, Language, LoggingConfig, LoggingConfigRequest, MacGenerateRequest, MacGenerateRequestEx, MacGenerateResponse, MacVerifyRequest, MacVerifyRequestEx, MacVerifyResponse, MfaChallenge, Mgf, MgfMgf1, NotificationPref, ObjectDigestRequest, ObjectOrigin, ObjectType, PasswordChangeRequest, PasswordResetRequest, PersistTransientKeyRequest, Plugin, PluginInvokeRequest, PluginInvokeResponse, PluginRequest, PluginSource, PluginType, ProcessInviteRequest, RecoveryCodes, RsaEncryptionPadding, RsaEncryptionPaddingOAEP, RsaEncryptionPolicy, RsaEncryptionPolicyPadding, RsaEncryptionPolicyPaddingOAEP, RsaEncryptionPolicyPaddingOAEPMgf1, RsaOptions, RsaSignaturePadding, RsaSignaturePaddingPSS, RsaSignaturePolicy, RsaSignaturePolicyPadding, SelectAccountRequest, SelectAccountResponse, ServerMode, SignRequest, SignRequestEx, SignResponse, SignatureMode, SignupRequest, SobjectDescriptor, SobjectRequest, SplunkLoggingConfig, SplunkLoggingConfigRequest, StackdriverLoggingConfig, StackdriverLoggingConfigRequest, SubscriptionChangeRequest, SubscriptionType, TagDecryptInput, TagEncryptOutput, TagLenEncryptInput, TlsConfig, TlsMode, U2fAddDeviceRequest, U2fDelDeviceRequest, U2fDevice, U2fKey, U2fRenameDeviceRequest, UnwrapKeyRequest, UnwrapKeyRequestEx, User, UserAccountFlags, UserAccountMap, UserGroup, UserGroupFlags, UserRequest, UserState, Uuid, ValidateTokenRequest, ValidateTokenResponse, VerifyRequest, VerifyRequestEx, VerifyResponse, VersionResponse, WrapKeyRequest, WrapKeyRequestEx, WrapKeyResponse, AccountsApi, ApprovalRequestsApi, AppsApi, AuthenticationApi, DigestApi, EncryptionAndDecryptionApi, GroupsApi, LogsApi, PluginsApi, SecurityObjectsApi, SignAndVerifyApi, TwoFactorAuthenticationApi, UsersApi, WrappingAndUnwrappingApi) {
  'use strict';

  /**
   * This_is_a_set_of_REST_APIs_for_accessing_the_Fortanix_Self_Defending_Key_Management_System__This_includes_APIs_for_managing_accounts_and_for_performing_cryptographic_and_key_management_operations_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FortanixSdkmsRestApi = require('index'); // See note below*.
   * var xxxSvc = new FortanixSdkmsRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FortanixSdkmsRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FortanixSdkmsRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FortanixSdkmsRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0-20181004
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ADDecryptInput model constructor.
     * @property {module:model/ADDecryptInput}
     */
    ADDecryptInput: ADDecryptInput,
    /**
     * The ADEncryptInput model constructor.
     * @property {module:model/ADEncryptInput}
     */
    ADEncryptInput: ADEncryptInput,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AccountRequest model constructor.
     * @property {module:model/AccountRequest}
     */
    AccountRequest: AccountRequest,
    /**
     * The AccountState model constructor.
     * @property {module:model/AccountState}
     */
    AccountState: AccountState,
    /**
     * The AgreeKeyMechanism model constructor.
     * @property {module:model/AgreeKeyMechanism}
     */
    AgreeKeyMechanism: AgreeKeyMechanism,
    /**
     * The AgreeKeyRequest model constructor.
     * @property {module:model/AgreeKeyRequest}
     */
    AgreeKeyRequest: AgreeKeyRequest,
    /**
     * The App model constructor.
     * @property {module:model/App}
     */
    App: App,
    /**
     * The AppAuthType model constructor.
     * @property {module:model/AppAuthType}
     */
    AppAuthType: AppAuthType,
    /**
     * The AppCredential model constructor.
     * @property {module:model/AppCredential}
     */
    AppCredential: AppCredential,
    /**
     * The AppCredentialResponse model constructor.
     * @property {module:model/AppCredentialResponse}
     */
    AppCredentialResponse: AppCredentialResponse,
    /**
     * The AppRequest model constructor.
     * @property {module:model/AppRequest}
     */
    AppRequest: AppRequest,
    /**
     * The ApprovableResult model constructor.
     * @property {module:model/ApprovableResult}
     */
    ApprovableResult: ApprovableResult,
    /**
     * The ApprovalRequest model constructor.
     * @property {module:model/ApprovalRequest}
     */
    ApprovalRequest: ApprovalRequest,
    /**
     * The ApprovalRequestRequest model constructor.
     * @property {module:model/ApprovalRequestRequest}
     */
    ApprovalRequestRequest: ApprovalRequestRequest,
    /**
     * The ApprovalStatus model constructor.
     * @property {module:model/ApprovalStatus}
     */
    ApprovalStatus: ApprovalStatus,
    /**
     * The ApprovalSubject model constructor.
     * @property {module:model/ApprovalSubject}
     */
    ApprovalSubject: ApprovalSubject,
    /**
     * The AuditLogResponse model constructor.
     * @property {module:model/AuditLogResponse}
     */
    AuditLogResponse: AuditLogResponse,
    /**
     * The AuthConfig model constructor.
     * @property {module:model/AuthConfig}
     */
    AuthConfig: AuthConfig,
    /**
     * The AuthConfigPassword model constructor.
     * @property {module:model/AuthConfigPassword}
     */
    AuthConfigPassword: AuthConfigPassword,
    /**
     * The AuthResponse model constructor.
     * @property {module:model/AuthResponse}
     */
    AuthResponse: AuthResponse,
    /**
     * The AuthType model constructor.
     * @property {module:model/AuthType}
     */
    AuthType: AuthType,
    /**
     * The BatchDecryptRequest model constructor.
     * @property {module:model/BatchDecryptRequest}
     */
    BatchDecryptRequest: BatchDecryptRequest,
    /**
     * The BatchDecryptRequestInner model constructor.
     * @property {module:model/BatchDecryptRequestInner}
     */
    BatchDecryptRequestInner: BatchDecryptRequestInner,
    /**
     * The BatchDecryptResponse model constructor.
     * @property {module:model/BatchDecryptResponse}
     */
    BatchDecryptResponse: BatchDecryptResponse,
    /**
     * The BatchDecryptResponseInner model constructor.
     * @property {module:model/BatchDecryptResponseInner}
     */
    BatchDecryptResponseInner: BatchDecryptResponseInner,
    /**
     * The BatchEncryptRequest model constructor.
     * @property {module:model/BatchEncryptRequest}
     */
    BatchEncryptRequest: BatchEncryptRequest,
    /**
     * The BatchEncryptRequestInner model constructor.
     * @property {module:model/BatchEncryptRequestInner}
     */
    BatchEncryptRequestInner: BatchEncryptRequestInner,
    /**
     * The BatchEncryptResponse model constructor.
     * @property {module:model/BatchEncryptResponse}
     */
    BatchEncryptResponse: BatchEncryptResponse,
    /**
     * The BatchEncryptResponseInner model constructor.
     * @property {module:model/BatchEncryptResponseInner}
     */
    BatchEncryptResponseInner: BatchEncryptResponseInner,
    /**
     * The BatchSignRequest model constructor.
     * @property {module:model/BatchSignRequest}
     */
    BatchSignRequest: BatchSignRequest,
    /**
     * The BatchSignResponse model constructor.
     * @property {module:model/BatchSignResponse}
     */
    BatchSignResponse: BatchSignResponse,
    /**
     * The BatchSignResponseInner model constructor.
     * @property {module:model/BatchSignResponseInner}
     */
    BatchSignResponseInner: BatchSignResponseInner,
    /**
     * The BatchVerifyRequest model constructor.
     * @property {module:model/BatchVerifyRequest}
     */
    BatchVerifyRequest: BatchVerifyRequest,
    /**
     * The BatchVerifyResponse model constructor.
     * @property {module:model/BatchVerifyResponse}
     */
    BatchVerifyResponse: BatchVerifyResponse,
    /**
     * The BatchVerifyResponseInner model constructor.
     * @property {module:model/BatchVerifyResponseInner}
     */
    BatchVerifyResponseInner: BatchVerifyResponseInner,
    /**
     * The CaConfig model constructor.
     * @property {module:model/CaConfig}
     */
    CaConfig: CaConfig,
    /**
     * The CipherMode model constructor.
     * @property {module:model/CipherMode}
     */
    CipherMode: CipherMode,
    /**
     * The ConfirmEmailRequest model constructor.
     * @property {module:model/ConfirmEmailRequest}
     */
    ConfirmEmailRequest: ConfirmEmailRequest,
    /**
     * The ConfirmEmailResponse model constructor.
     * @property {module:model/ConfirmEmailResponse}
     */
    ConfirmEmailResponse: ConfirmEmailResponse,
    /**
     * The CreatorType model constructor.
     * @property {module:model/CreatorType}
     */
    CreatorType: CreatorType,
    /**
     * The CryptMode model constructor.
     * @property {module:model/CryptMode}
     */
    CryptMode: CryptMode,
    /**
     * The DecryptFinalRequest model constructor.
     * @property {module:model/DecryptFinalRequest}
     */
    DecryptFinalRequest: DecryptFinalRequest,
    /**
     * The DecryptFinalRequestEx model constructor.
     * @property {module:model/DecryptFinalRequestEx}
     */
    DecryptFinalRequestEx: DecryptFinalRequestEx,
    /**
     * The DecryptFinalResponse model constructor.
     * @property {module:model/DecryptFinalResponse}
     */
    DecryptFinalResponse: DecryptFinalResponse,
    /**
     * The DecryptInitRequest model constructor.
     * @property {module:model/DecryptInitRequest}
     */
    DecryptInitRequest: DecryptInitRequest,
    /**
     * The DecryptInitRequestEx model constructor.
     * @property {module:model/DecryptInitRequestEx}
     */
    DecryptInitRequestEx: DecryptInitRequestEx,
    /**
     * The DecryptInitResponse model constructor.
     * @property {module:model/DecryptInitResponse}
     */
    DecryptInitResponse: DecryptInitResponse,
    /**
     * The DecryptRequest model constructor.
     * @property {module:model/DecryptRequest}
     */
    DecryptRequest: DecryptRequest,
    /**
     * The DecryptRequestEx model constructor.
     * @property {module:model/DecryptRequestEx}
     */
    DecryptRequestEx: DecryptRequestEx,
    /**
     * The DecryptResponse model constructor.
     * @property {module:model/DecryptResponse}
     */
    DecryptResponse: DecryptResponse,
    /**
     * The DecryptUpdateRequest model constructor.
     * @property {module:model/DecryptUpdateRequest}
     */
    DecryptUpdateRequest: DecryptUpdateRequest,
    /**
     * The DecryptUpdateRequestEx model constructor.
     * @property {module:model/DecryptUpdateRequestEx}
     */
    DecryptUpdateRequestEx: DecryptUpdateRequestEx,
    /**
     * The DecryptUpdateResponse model constructor.
     * @property {module:model/DecryptUpdateResponse}
     */
    DecryptUpdateResponse: DecryptUpdateResponse,
    /**
     * The DeriveKeyMechanism model constructor.
     * @property {module:model/DeriveKeyMechanism}
     */
    DeriveKeyMechanism: DeriveKeyMechanism,
    /**
     * The DeriveKeyRequest model constructor.
     * @property {module:model/DeriveKeyRequest}
     */
    DeriveKeyRequest: DeriveKeyRequest,
    /**
     * The DeriveKeyRequestEx model constructor.
     * @property {module:model/DeriveKeyRequestEx}
     */
    DeriveKeyRequestEx: DeriveKeyRequestEx,
    /**
     * The DigestAlgorithm model constructor.
     * @property {module:model/DigestAlgorithm}
     */
    DigestAlgorithm: DigestAlgorithm,
    /**
     * The DigestRequest model constructor.
     * @property {module:model/DigestRequest}
     */
    DigestRequest: DigestRequest,
    /**
     * The DigestResponse model constructor.
     * @property {module:model/DigestResponse}
     */
    DigestResponse: DigestResponse,
    /**
     * The EllipticCurve model constructor.
     * @property {module:model/EllipticCurve}
     */
    EllipticCurve: EllipticCurve,
    /**
     * The EncryptFinalRequest model constructor.
     * @property {module:model/EncryptFinalRequest}
     */
    EncryptFinalRequest: EncryptFinalRequest,
    /**
     * The EncryptFinalRequestEx model constructor.
     * @property {module:model/EncryptFinalRequestEx}
     */
    EncryptFinalRequestEx: EncryptFinalRequestEx,
    /**
     * The EncryptFinalResponse model constructor.
     * @property {module:model/EncryptFinalResponse}
     */
    EncryptFinalResponse: EncryptFinalResponse,
    /**
     * The EncryptInitRequest model constructor.
     * @property {module:model/EncryptInitRequest}
     */
    EncryptInitRequest: EncryptInitRequest,
    /**
     * The EncryptInitRequestEx model constructor.
     * @property {module:model/EncryptInitRequestEx}
     */
    EncryptInitRequestEx: EncryptInitRequestEx,
    /**
     * The EncryptInitResponse model constructor.
     * @property {module:model/EncryptInitResponse}
     */
    EncryptInitResponse: EncryptInitResponse,
    /**
     * The EncryptRequest model constructor.
     * @property {module:model/EncryptRequest}
     */
    EncryptRequest: EncryptRequest,
    /**
     * The EncryptRequestEx model constructor.
     * @property {module:model/EncryptRequestEx}
     */
    EncryptRequestEx: EncryptRequestEx,
    /**
     * The EncryptResponse model constructor.
     * @property {module:model/EncryptResponse}
     */
    EncryptResponse: EncryptResponse,
    /**
     * The EncryptUpdateRequest model constructor.
     * @property {module:model/EncryptUpdateRequest}
     */
    EncryptUpdateRequest: EncryptUpdateRequest,
    /**
     * The EncryptUpdateRequestEx model constructor.
     * @property {module:model/EncryptUpdateRequestEx}
     */
    EncryptUpdateRequestEx: EncryptUpdateRequestEx,
    /**
     * The EncryptUpdateResponse model constructor.
     * @property {module:model/EncryptUpdateResponse}
     */
    EncryptUpdateResponse: EncryptUpdateResponse,
    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity: Entity,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ForgotPasswordRequest model constructor.
     * @property {module:model/ForgotPasswordRequest}
     */
    ForgotPasswordRequest: ForgotPasswordRequest,
    /**
     * The GoogleServiceAccountKey model constructor.
     * @property {module:model/GoogleServiceAccountKey}
     */
    GoogleServiceAccountKey: GoogleServiceAccountKey,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupRequest model constructor.
     * @property {module:model/GroupRequest}
     */
    GroupRequest: GroupRequest,
    /**
     * The IVDecryptInput model constructor.
     * @property {module:model/IVDecryptInput}
     */
    IVDecryptInput: IVDecryptInput,
    /**
     * The IVEncryptInput model constructor.
     * @property {module:model/IVEncryptInput}
     */
    IVEncryptInput: IVEncryptInput,
    /**
     * The IVEncryptOutput model constructor.
     * @property {module:model/IVEncryptOutput}
     */
    IVEncryptOutput: IVEncryptOutput,
    /**
     * The KeyObject model constructor.
     * @property {module:model/KeyObject}
     */
    KeyObject: KeyObject,
    /**
     * The KeyOperations model constructor.
     * @property {module:model/KeyOperations}
     */
    KeyOperations: KeyOperations,
    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language: Language,
    /**
     * The LoggingConfig model constructor.
     * @property {module:model/LoggingConfig}
     */
    LoggingConfig: LoggingConfig,
    /**
     * The LoggingConfigRequest model constructor.
     * @property {module:model/LoggingConfigRequest}
     */
    LoggingConfigRequest: LoggingConfigRequest,
    /**
     * The MacGenerateRequest model constructor.
     * @property {module:model/MacGenerateRequest}
     */
    MacGenerateRequest: MacGenerateRequest,
    /**
     * The MacGenerateRequestEx model constructor.
     * @property {module:model/MacGenerateRequestEx}
     */
    MacGenerateRequestEx: MacGenerateRequestEx,
    /**
     * The MacGenerateResponse model constructor.
     * @property {module:model/MacGenerateResponse}
     */
    MacGenerateResponse: MacGenerateResponse,
    /**
     * The MacVerifyRequest model constructor.
     * @property {module:model/MacVerifyRequest}
     */
    MacVerifyRequest: MacVerifyRequest,
    /**
     * The MacVerifyRequestEx model constructor.
     * @property {module:model/MacVerifyRequestEx}
     */
    MacVerifyRequestEx: MacVerifyRequestEx,
    /**
     * The MacVerifyResponse model constructor.
     * @property {module:model/MacVerifyResponse}
     */
    MacVerifyResponse: MacVerifyResponse,
    /**
     * The MfaChallenge model constructor.
     * @property {module:model/MfaChallenge}
     */
    MfaChallenge: MfaChallenge,
    /**
     * The Mgf model constructor.
     * @property {module:model/Mgf}
     */
    Mgf: Mgf,
    /**
     * The MgfMgf1 model constructor.
     * @property {module:model/MgfMgf1}
     */
    MgfMgf1: MgfMgf1,
    /**
     * The NotificationPref model constructor.
     * @property {module:model/NotificationPref}
     */
    NotificationPref: NotificationPref,
    /**
     * The ObjectDigestRequest model constructor.
     * @property {module:model/ObjectDigestRequest}
     */
    ObjectDigestRequest: ObjectDigestRequest,
    /**
     * The ObjectOrigin model constructor.
     * @property {module:model/ObjectOrigin}
     */
    ObjectOrigin: ObjectOrigin,
    /**
     * The ObjectType model constructor.
     * @property {module:model/ObjectType}
     */
    ObjectType: ObjectType,
    /**
     * The PasswordChangeRequest model constructor.
     * @property {module:model/PasswordChangeRequest}
     */
    PasswordChangeRequest: PasswordChangeRequest,
    /**
     * The PasswordResetRequest model constructor.
     * @property {module:model/PasswordResetRequest}
     */
    PasswordResetRequest: PasswordResetRequest,
    /**
     * The PersistTransientKeyRequest model constructor.
     * @property {module:model/PersistTransientKeyRequest}
     */
    PersistTransientKeyRequest: PersistTransientKeyRequest,
    /**
     * The Plugin model constructor.
     * @property {module:model/Plugin}
     */
    Plugin: Plugin,
    /**
     * The PluginInvokeRequest model constructor.
     * @property {module:model/PluginInvokeRequest}
     */
    PluginInvokeRequest: PluginInvokeRequest,
    /**
     * The PluginInvokeResponse model constructor.
     * @property {module:model/PluginInvokeResponse}
     */
    PluginInvokeResponse: PluginInvokeResponse,
    /**
     * The PluginRequest model constructor.
     * @property {module:model/PluginRequest}
     */
    PluginRequest: PluginRequest,
    /**
     * The PluginSource model constructor.
     * @property {module:model/PluginSource}
     */
    PluginSource: PluginSource,
    /**
     * The PluginType model constructor.
     * @property {module:model/PluginType}
     */
    PluginType: PluginType,
    /**
     * The ProcessInviteRequest model constructor.
     * @property {module:model/ProcessInviteRequest}
     */
    ProcessInviteRequest: ProcessInviteRequest,
    /**
     * The RecoveryCodes model constructor.
     * @property {module:model/RecoveryCodes}
     */
    RecoveryCodes: RecoveryCodes,
    /**
     * The RsaEncryptionPadding model constructor.
     * @property {module:model/RsaEncryptionPadding}
     */
    RsaEncryptionPadding: RsaEncryptionPadding,
    /**
     * The RsaEncryptionPaddingOAEP model constructor.
     * @property {module:model/RsaEncryptionPaddingOAEP}
     */
    RsaEncryptionPaddingOAEP: RsaEncryptionPaddingOAEP,
    /**
     * The RsaEncryptionPolicy model constructor.
     * @property {module:model/RsaEncryptionPolicy}
     */
    RsaEncryptionPolicy: RsaEncryptionPolicy,
    /**
     * The RsaEncryptionPolicyPadding model constructor.
     * @property {module:model/RsaEncryptionPolicyPadding}
     */
    RsaEncryptionPolicyPadding: RsaEncryptionPolicyPadding,
    /**
     * The RsaEncryptionPolicyPaddingOAEP model constructor.
     * @property {module:model/RsaEncryptionPolicyPaddingOAEP}
     */
    RsaEncryptionPolicyPaddingOAEP: RsaEncryptionPolicyPaddingOAEP,
    /**
     * The RsaEncryptionPolicyPaddingOAEPMgf1 model constructor.
     * @property {module:model/RsaEncryptionPolicyPaddingOAEPMgf1}
     */
    RsaEncryptionPolicyPaddingOAEPMgf1: RsaEncryptionPolicyPaddingOAEPMgf1,
    /**
     * The RsaOptions model constructor.
     * @property {module:model/RsaOptions}
     */
    RsaOptions: RsaOptions,
    /**
     * The RsaSignaturePadding model constructor.
     * @property {module:model/RsaSignaturePadding}
     */
    RsaSignaturePadding: RsaSignaturePadding,
    /**
     * The RsaSignaturePaddingPSS model constructor.
     * @property {module:model/RsaSignaturePaddingPSS}
     */
    RsaSignaturePaddingPSS: RsaSignaturePaddingPSS,
    /**
     * The RsaSignaturePolicy model constructor.
     * @property {module:model/RsaSignaturePolicy}
     */
    RsaSignaturePolicy: RsaSignaturePolicy,
    /**
     * The RsaSignaturePolicyPadding model constructor.
     * @property {module:model/RsaSignaturePolicyPadding}
     */
    RsaSignaturePolicyPadding: RsaSignaturePolicyPadding,
    /**
     * The SelectAccountRequest model constructor.
     * @property {module:model/SelectAccountRequest}
     */
    SelectAccountRequest: SelectAccountRequest,
    /**
     * The SelectAccountResponse model constructor.
     * @property {module:model/SelectAccountResponse}
     */
    SelectAccountResponse: SelectAccountResponse,
    /**
     * The ServerMode model constructor.
     * @property {module:model/ServerMode}
     */
    ServerMode: ServerMode,
    /**
     * The SignRequest model constructor.
     * @property {module:model/SignRequest}
     */
    SignRequest: SignRequest,
    /**
     * The SignRequestEx model constructor.
     * @property {module:model/SignRequestEx}
     */
    SignRequestEx: SignRequestEx,
    /**
     * The SignResponse model constructor.
     * @property {module:model/SignResponse}
     */
    SignResponse: SignResponse,
    /**
     * The SignatureMode model constructor.
     * @property {module:model/SignatureMode}
     */
    SignatureMode: SignatureMode,
    /**
     * The SignupRequest model constructor.
     * @property {module:model/SignupRequest}
     */
    SignupRequest: SignupRequest,
    /**
     * The SobjectDescriptor model constructor.
     * @property {module:model/SobjectDescriptor}
     */
    SobjectDescriptor: SobjectDescriptor,
    /**
     * The SobjectRequest model constructor.
     * @property {module:model/SobjectRequest}
     */
    SobjectRequest: SobjectRequest,
    /**
     * The SplunkLoggingConfig model constructor.
     * @property {module:model/SplunkLoggingConfig}
     */
    SplunkLoggingConfig: SplunkLoggingConfig,
    /**
     * The SplunkLoggingConfigRequest model constructor.
     * @property {module:model/SplunkLoggingConfigRequest}
     */
    SplunkLoggingConfigRequest: SplunkLoggingConfigRequest,
    /**
     * The StackdriverLoggingConfig model constructor.
     * @property {module:model/StackdriverLoggingConfig}
     */
    StackdriverLoggingConfig: StackdriverLoggingConfig,
    /**
     * The StackdriverLoggingConfigRequest model constructor.
     * @property {module:model/StackdriverLoggingConfigRequest}
     */
    StackdriverLoggingConfigRequest: StackdriverLoggingConfigRequest,
    /**
     * The SubscriptionChangeRequest model constructor.
     * @property {module:model/SubscriptionChangeRequest}
     */
    SubscriptionChangeRequest: SubscriptionChangeRequest,
    /**
     * The SubscriptionType model constructor.
     * @property {module:model/SubscriptionType}
     */
    SubscriptionType: SubscriptionType,
    /**
     * The TagDecryptInput model constructor.
     * @property {module:model/TagDecryptInput}
     */
    TagDecryptInput: TagDecryptInput,
    /**
     * The TagEncryptOutput model constructor.
     * @property {module:model/TagEncryptOutput}
     */
    TagEncryptOutput: TagEncryptOutput,
    /**
     * The TagLenEncryptInput model constructor.
     * @property {module:model/TagLenEncryptInput}
     */
    TagLenEncryptInput: TagLenEncryptInput,
    /**
     * The TlsConfig model constructor.
     * @property {module:model/TlsConfig}
     */
    TlsConfig: TlsConfig,
    /**
     * The TlsMode model constructor.
     * @property {module:model/TlsMode}
     */
    TlsMode: TlsMode,
    /**
     * The U2fAddDeviceRequest model constructor.
     * @property {module:model/U2fAddDeviceRequest}
     */
    U2fAddDeviceRequest: U2fAddDeviceRequest,
    /**
     * The U2fDelDeviceRequest model constructor.
     * @property {module:model/U2fDelDeviceRequest}
     */
    U2fDelDeviceRequest: U2fDelDeviceRequest,
    /**
     * The U2fDevice model constructor.
     * @property {module:model/U2fDevice}
     */
    U2fDevice: U2fDevice,
    /**
     * The U2fKey model constructor.
     * @property {module:model/U2fKey}
     */
    U2fKey: U2fKey,
    /**
     * The U2fRenameDeviceRequest model constructor.
     * @property {module:model/U2fRenameDeviceRequest}
     */
    U2fRenameDeviceRequest: U2fRenameDeviceRequest,
    /**
     * The UnwrapKeyRequest model constructor.
     * @property {module:model/UnwrapKeyRequest}
     */
    UnwrapKeyRequest: UnwrapKeyRequest,
    /**
     * The UnwrapKeyRequestEx model constructor.
     * @property {module:model/UnwrapKeyRequestEx}
     */
    UnwrapKeyRequestEx: UnwrapKeyRequestEx,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAccountFlags model constructor.
     * @property {module:model/UserAccountFlags}
     */
    UserAccountFlags: UserAccountFlags,
    /**
     * The UserAccountMap model constructor.
     * @property {module:model/UserAccountMap}
     */
    UserAccountMap: UserAccountMap,
    /**
     * The UserGroup model constructor.
     * @property {module:model/UserGroup}
     */
    UserGroup: UserGroup,
    /**
     * The UserGroupFlags model constructor.
     * @property {module:model/UserGroupFlags}
     */
    UserGroupFlags: UserGroupFlags,
    /**
     * The UserRequest model constructor.
     * @property {module:model/UserRequest}
     */
    UserRequest: UserRequest,
    /**
     * The UserState model constructor.
     * @property {module:model/UserState}
     */
    UserState: UserState,
    /**
     * The Uuid model constructor.
     * @property {module:model/Uuid}
     */
    Uuid: Uuid,
    /**
     * The ValidateTokenRequest model constructor.
     * @property {module:model/ValidateTokenRequest}
     */
    ValidateTokenRequest: ValidateTokenRequest,
    /**
     * The ValidateTokenResponse model constructor.
     * @property {module:model/ValidateTokenResponse}
     */
    ValidateTokenResponse: ValidateTokenResponse,
    /**
     * The VerifyRequest model constructor.
     * @property {module:model/VerifyRequest}
     */
    VerifyRequest: VerifyRequest,
    /**
     * The VerifyRequestEx model constructor.
     * @property {module:model/VerifyRequestEx}
     */
    VerifyRequestEx: VerifyRequestEx,
    /**
     * The VerifyResponse model constructor.
     * @property {module:model/VerifyResponse}
     */
    VerifyResponse: VerifyResponse,
    /**
     * The VersionResponse model constructor.
     * @property {module:model/VersionResponse}
     */
    VersionResponse: VersionResponse,
    /**
     * The WrapKeyRequest model constructor.
     * @property {module:model/WrapKeyRequest}
     */
    WrapKeyRequest: WrapKeyRequest,
    /**
     * The WrapKeyRequestEx model constructor.
     * @property {module:model/WrapKeyRequestEx}
     */
    WrapKeyRequestEx: WrapKeyRequestEx,
    /**
     * The WrapKeyResponse model constructor.
     * @property {module:model/WrapKeyResponse}
     */
    WrapKeyResponse: WrapKeyResponse,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The ApprovalRequestsApi service constructor.
     * @property {module:api/ApprovalRequestsApi}
     */
    ApprovalRequestsApi: ApprovalRequestsApi,
    /**
     * The AppsApi service constructor.
     * @property {module:api/AppsApi}
     */
    AppsApi: AppsApi,
    /**
     * The AuthenticationApi service constructor.
     * @property {module:api/AuthenticationApi}
     */
    AuthenticationApi: AuthenticationApi,
    /**
     * The DigestApi service constructor.
     * @property {module:api/DigestApi}
     */
    DigestApi: DigestApi,
    /**
     * The EncryptionAndDecryptionApi service constructor.
     * @property {module:api/EncryptionAndDecryptionApi}
     */
    EncryptionAndDecryptionApi: EncryptionAndDecryptionApi,
    /**
     * The GroupsApi service constructor.
     * @property {module:api/GroupsApi}
     */
    GroupsApi: GroupsApi,
    /**
     * The LogsApi service constructor.
     * @property {module:api/LogsApi}
     */
    LogsApi: LogsApi,
    /**
     * The PluginsApi service constructor.
     * @property {module:api/PluginsApi}
     */
    PluginsApi: PluginsApi,
    /**
     * The SecurityObjectsApi service constructor.
     * @property {module:api/SecurityObjectsApi}
     */
    SecurityObjectsApi: SecurityObjectsApi,
    /**
     * The SignAndVerifyApi service constructor.
     * @property {module:api/SignAndVerifyApi}
     */
    SignAndVerifyApi: SignAndVerifyApi,
    /**
     * The TwoFactorAuthenticationApi service constructor.
     * @property {module:api/TwoFactorAuthenticationApi}
     */
    TwoFactorAuthenticationApi: TwoFactorAuthenticationApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The WrappingAndUnwrappingApi service constructor.
     * @property {module:api/WrappingAndUnwrappingApi}
     */
    WrappingAndUnwrappingApi: WrappingAndUnwrappingApi
  };

  return exports;
}));
