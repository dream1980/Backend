/**
 * Fortanix SDKMS REST API
 * This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 
 *
 * OpenAPI spec version: 1.0.0-20181004
 * Contact: support@fortanix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AuthConfig', 'model/LoggingConfigRequest', 'model/NotificationPref', 'model/SubscriptionChangeRequest', 'model/SubscriptionType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AuthConfig'), require('./LoggingConfigRequest'), require('./NotificationPref'), require('./SubscriptionChangeRequest'), require('./SubscriptionType'));
  } else {
    // Browser globals (root is window)
    if (!root.FortanixSdkmsRestApi) {
      root.FortanixSdkmsRestApi = {};
    }
    root.FortanixSdkmsRestApi.AccountRequest = factory(root.FortanixSdkmsRestApi.ApiClient, root.FortanixSdkmsRestApi.AuthConfig, root.FortanixSdkmsRestApi.LoggingConfigRequest, root.FortanixSdkmsRestApi.NotificationPref, root.FortanixSdkmsRestApi.SubscriptionChangeRequest, root.FortanixSdkmsRestApi.SubscriptionType);
  }
}(this, function(ApiClient, AuthConfig, LoggingConfigRequest, NotificationPref, SubscriptionChangeRequest, SubscriptionType) {
  'use strict';




  /**
   * The AccountRequest model module.
   * @module model/AccountRequest
   * @version 1.0.0-20181004
   */

  /**
   * Constructs a new <code>AccountRequest</code>.
   * @alias module:model/AccountRequest
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>AccountRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountRequest} obj Optional instance to populate.
   * @return {module:model/AccountRequest} The populated <code>AccountRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('organization')) {
        obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('notification_pref')) {
        obj['notification_pref'] = NotificationPref.constructFromObject(data['notification_pref']);
      }
      if (data.hasOwnProperty('auth_config')) {
        obj['auth_config'] = AuthConfig.constructFromObject(data['auth_config']);
      }
      if (data.hasOwnProperty('add_logging_configs')) {
        obj['add_logging_configs'] = ApiClient.convertToType(data['add_logging_configs'], [LoggingConfigRequest]);
      }
      if (data.hasOwnProperty('mod_logging_configs')) {
        obj['mod_logging_configs'] = ApiClient.convertToType(data['mod_logging_configs'], {'String': LoggingConfigRequest});
      }
      if (data.hasOwnProperty('del_logging_configs')) {
        obj['del_logging_configs'] = ApiClient.convertToType(data['del_logging_configs'], ['String']);
      }
      if (data.hasOwnProperty('pending_subscription_change_request')) {
        obj['pending_subscription_change_request'] = SubscriptionChangeRequest.constructFromObject(data['pending_subscription_change_request']);
      }
      if (data.hasOwnProperty('enabled')) {
        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('subscription')) {
        obj['subscription'] = SubscriptionType.constructFromObject(data['subscription']);
      }
      if (data.hasOwnProperty('custom_metadata')) {
        obj['custom_metadata'] = ApiClient.convertToType(data['custom_metadata'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * Name of the account. Accounts must be unique within an SDKMS instance.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Account ID uniquely identifying this account.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Organization (e.g. company name) that owns this account
   * @member {String} organization
   */
  exports.prototype['organization'] = undefined;
  /**
   * Main country associated with this account
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * Contact phone number associated with this account
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * @member {module:model/NotificationPref} notification_pref
   */
  exports.prototype['notification_pref'] = undefined;
  /**
   * @member {module:model/AuthConfig} auth_config
   */
  exports.prototype['auth_config'] = undefined;
  /**
   * @member {Array.<module:model/LoggingConfigRequest>} add_logging_configs
   */
  exports.prototype['add_logging_configs'] = undefined;
  /**
   * Map from UUIDs to LoggingConfigRequest objects
   * @member {Object.<String, module:model/LoggingConfigRequest>} mod_logging_configs
   */
  exports.prototype['mod_logging_configs'] = undefined;
  /**
   * @member {Array.<String>} del_logging_configs
   */
  exports.prototype['del_logging_configs'] = undefined;
  /**
   * @member {module:model/SubscriptionChangeRequest} pending_subscription_change_request
   */
  exports.prototype['pending_subscription_change_request'] = undefined;
  /**
   * Whether this account is enabled. This may only be changed by sysadmins.
   * @member {Boolean} enabled
   */
  exports.prototype['enabled'] = undefined;
  /**
   * @member {module:model/SubscriptionType} subscription
   */
  exports.prototype['subscription'] = undefined;
  /**
   * Sysadmin-defined metadata for this account. Stored as key-value pairs. This field may only be used by sysadmin users. 
   * @member {Object.<String, String>} custom_metadata
   */
  exports.prototype['custom_metadata'] = undefined;



  return exports;
}));


