/**
 * Fortanix SDKMS REST API
 * This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 
 *
 * OpenAPI spec version: 1.0.0-20181004
 * Contact: support@fortanix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FortanixSdkmsRestApi) {
      root.FortanixSdkmsRestApi = {};
    }
    root.FortanixSdkmsRestApi.AuditLogResponse = factory(root.FortanixSdkmsRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AuditLogResponse model module.
   * @module model/AuditLogResponse
   * @version 1.0.0-20181004
   */

  /**
   * Constructs a new <code>AuditLogResponse</code>.
   * @alias module:model/AuditLogResponse
   * @class
   * @param actionType {String} Type of action performed.
   * @param actorType {String} Type of entity performing action.
   * @param message {String} Audit log message.
   * @param severity {String} Severity of audit log message.
   * @param time {String} Time that action occurred.
   * @param objectId {String} ID of object acted upon.
   * @param actorId {String} ID of entity performing action.
   * @param acctId {String} Account ID of the account this audit log applies to.
   * @param groupIds {Array.<String>} 
   */
  var exports = function(actionType, actorType, message, severity, time, objectId, actorId, acctId, groupIds) {
    var _this = this;

    _this['action_type'] = actionType;
    _this['actor_type'] = actorType;
    _this['message'] = message;
    _this['severity'] = severity;
    _this['time'] = time;
    _this['object_id'] = objectId;
    _this['actor_id'] = actorId;
    _this['acct_id'] = acctId;
    _this['group_ids'] = groupIds;
  };

  /**
   * Constructs a <code>AuditLogResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuditLogResponse} obj Optional instance to populate.
   * @return {module:model/AuditLogResponse} The populated <code>AuditLogResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('action_type')) {
        obj['action_type'] = ApiClient.convertToType(data['action_type'], 'String');
      }
      if (data.hasOwnProperty('actor_type')) {
        obj['actor_type'] = ApiClient.convertToType(data['actor_type'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('severity')) {
        obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
      }
      if (data.hasOwnProperty('time')) {
        obj['time'] = ApiClient.convertToType(data['time'], 'String');
      }
      if (data.hasOwnProperty('object_id')) {
        obj['object_id'] = ApiClient.convertToType(data['object_id'], 'String');
      }
      if (data.hasOwnProperty('actor_id')) {
        obj['actor_id'] = ApiClient.convertToType(data['actor_id'], 'String');
      }
      if (data.hasOwnProperty('acct_id')) {
        obj['acct_id'] = ApiClient.convertToType(data['acct_id'], 'String');
      }
      if (data.hasOwnProperty('group_ids')) {
        obj['group_ids'] = ApiClient.convertToType(data['group_ids'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Type of action performed.
   * @member {String} action_type
   */
  exports.prototype['action_type'] = undefined;
  /**
   * Type of entity performing action.
   * @member {String} actor_type
   */
  exports.prototype['actor_type'] = undefined;
  /**
   * Audit log message.
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * Severity of audit log message.
   * @member {String} severity
   */
  exports.prototype['severity'] = undefined;
  /**
   * Time that action occurred.
   * @member {String} time
   */
  exports.prototype['time'] = undefined;
  /**
   * ID of object acted upon.
   * @member {String} object_id
   */
  exports.prototype['object_id'] = undefined;
  /**
   * ID of entity performing action.
   * @member {String} actor_id
   */
  exports.prototype['actor_id'] = undefined;
  /**
   * Account ID of the account this audit log applies to.
   * @member {String} acct_id
   */
  exports.prototype['acct_id'] = undefined;
  /**
   * @member {Array.<String>} group_ids
   */
  exports.prototype['group_ids'] = undefined;



  return exports;
}));


