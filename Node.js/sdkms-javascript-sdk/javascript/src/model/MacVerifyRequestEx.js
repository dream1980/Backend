/**
 * Fortanix SDKMS REST API
 * This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 
 *
 * OpenAPI spec version: 1.0.0-20181004
 * Contact: support@fortanix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DigestAlgorithm', 'model/SobjectDescriptor'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DigestAlgorithm'), require('./SobjectDescriptor'));
  } else {
    // Browser globals (root is window)
    if (!root.FortanixSdkmsRestApi) {
      root.FortanixSdkmsRestApi = {};
    }
    root.FortanixSdkmsRestApi.MacVerifyRequestEx = factory(root.FortanixSdkmsRestApi.ApiClient, root.FortanixSdkmsRestApi.DigestAlgorithm, root.FortanixSdkmsRestApi.SobjectDescriptor);
  }
}(this, function(ApiClient, DigestAlgorithm, SobjectDescriptor) {
  'use strict';




  /**
   * The MacVerifyRequestEx model module.
   * @module model/MacVerifyRequestEx
   * @version 1.0.0-20181004
   */

  /**
   * Constructs a new <code>MacVerifyRequestEx</code>.
   * @alias module:model/MacVerifyRequestEx
   * @class
   * @param key {module:model/SobjectDescriptor} 
   * @param alg {module:model/DigestAlgorithm} 
   * @param data {Blob} The data to verify the MAC of.
   */
  var exports = function(key, alg, data) {
    var _this = this;

    _this['key'] = key;
    _this['alg'] = alg;
    _this['data'] = data;


  };

  /**
   * Constructs a <code>MacVerifyRequestEx</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MacVerifyRequestEx} obj Optional instance to populate.
   * @return {module:model/MacVerifyRequestEx} The populated <code>MacVerifyRequestEx</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('key')) {
        obj['key'] = SobjectDescriptor.constructFromObject(data['key']);
      }
      if (data.hasOwnProperty('alg')) {
        obj['alg'] = DigestAlgorithm.constructFromObject(data['alg']);
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], 'Blob');
      }
      if (data.hasOwnProperty('digest')) {
        obj['digest'] = ApiClient.convertToType(data['digest'], 'Blob');
      }
      if (data.hasOwnProperty('mac')) {
        obj['mac'] = ApiClient.convertToType(data['mac'], 'Blob');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/SobjectDescriptor} key
   */
  exports.prototype['key'] = undefined;
  /**
   * @member {module:model/DigestAlgorithm} alg
   */
  exports.prototype['alg'] = undefined;
  /**
   * The data to verify the MAC of.
   * @member {Blob} data
   */
  exports.prototype['data'] = undefined;
  /**
   * The MAC previously computed for the input data. NOTE - this field is deprecated. Instead you should use mac field.
   * @member {Blob} digest
   */
  exports.prototype['digest'] = undefined;
  /**
   * The MAC previously computed for the input data.
   * @member {Blob} mac
   */
  exports.prototype['mac'] = undefined;



  return exports;
}));


