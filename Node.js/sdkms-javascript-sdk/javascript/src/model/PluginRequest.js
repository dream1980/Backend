/**
 * Fortanix SDKMS REST API
 * This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 
 *
 * OpenAPI spec version: 1.0.0-20181004
 * Contact: support@fortanix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PluginSource', 'model/PluginType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PluginSource'), require('./PluginType'));
  } else {
    // Browser globals (root is window)
    if (!root.FortanixSdkmsRestApi) {
      root.FortanixSdkmsRestApi = {};
    }
    root.FortanixSdkmsRestApi.PluginRequest = factory(root.FortanixSdkmsRestApi.ApiClient, root.FortanixSdkmsRestApi.PluginSource, root.FortanixSdkmsRestApi.PluginType);
  }
}(this, function(ApiClient, PluginSource, PluginType) {
  'use strict';




  /**
   * The PluginRequest model module.
   * @module model/PluginRequest
   * @version 1.0.0-20181004
   */

  /**
   * Constructs a new <code>PluginRequest</code>.
   * @alias module:model/PluginRequest
   * @class
   * @param name {String} Name of the plugin. Plugin names must be unique within an account.
   * @param addGroups {Array.<String>} An array of Security Group IDs to add to this plugin.
   * @param defaultGroup {String} The default group of this plugin. This is the group where security objects will be created by default by this plugin.
   * @param source {module:model/PluginSource} 
   */
  var exports = function(name, addGroups, defaultGroup, source) {
    var _this = this;

    _this['name'] = name;

    _this['add_groups'] = addGroups;

    _this['default_group'] = defaultGroup;
    _this['source'] = source;


  };

  /**
   * Constructs a <code>PluginRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PluginRequest} obj Optional instance to populate.
   * @return {module:model/PluginRequest} The populated <code>PluginRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('add_groups')) {
        obj['add_groups'] = ApiClient.convertToType(data['add_groups'], ['String']);
      }
      if (data.hasOwnProperty('del_groups')) {
        obj['del_groups'] = ApiClient.convertToType(data['del_groups'], ['String']);
      }
      if (data.hasOwnProperty('default_group')) {
        obj['default_group'] = ApiClient.convertToType(data['default_group'], 'String');
      }
      if (data.hasOwnProperty('source')) {
        obj['source'] = PluginSource.constructFromObject(data['source']);
      }
      if (data.hasOwnProperty('enabled')) {
        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('plugin_type')) {
        obj['plugin_type'] = PluginType.constructFromObject(data['plugin_type']);
      }
    }
    return obj;
  }

  /**
   * Name of the plugin. Plugin names must be unique within an account.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Description of this plugin.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * An array of Security Group IDs to add to this plugin.
   * @member {Array.<String>} add_groups
   */
  exports.prototype['add_groups'] = undefined;
  /**
   * An array of security group IDs to remove from this plugin.
   * @member {Array.<String>} del_groups
   */
  exports.prototype['del_groups'] = undefined;
  /**
   * The default group of this plugin. This is the group where security objects will be created by default by this plugin.
   * @member {String} default_group
   */
  exports.prototype['default_group'] = undefined;
  /**
   * @member {module:model/PluginSource} source
   */
  exports.prototype['source'] = undefined;
  /**
   * Whether this plugin is enabled.
   * @member {Boolean} enabled
   */
  exports.prototype['enabled'] = undefined;
  /**
   * @member {module:model/PluginType} plugin_type
   */
  exports.prototype['plugin_type'] = undefined;



  return exports;
}));


